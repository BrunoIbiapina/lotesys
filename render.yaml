services:
  - type: web
    name: lotesys
    env: python
    region: oregon
    plan: free

    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
      python manage.py collectstatic --noinput || true

    startCommand: ./start.sh
    autoDeploy: true

    envVars:
      - key: DJANGO_DEBUG
        value: "False"
      - key: DJANGO_SECRET_KEY
        generateValue: true

      # Admin automático (opcional)
      - key: DJANGO_SUPERUSER_USERNAME
        value: admin
      - key: DJANGO_SUPERUSER_EMAIL
        value: admin@example.com
      - key: DJANGO_SUPERUSER_PASSWORD
        value: admin123

      # Host/CSRF do Render
      - key: ALLOWED_HOSTS
        value: "lotesys.onrender.com,127.0.0.1,localhost"
      - key: CSRF_TRUSTED_ORIGINS
        value: "https://lotesys.onrender.com"

      # Banco do Render
      - key: DATABASE_URL
        fromDatabase:
          name: lotesys-db
          property: connectionString

      # Servir /media/
      - key: SERVE_MEDIA
        value: "True"

      # Telegram (também no web, caso você queira disparar manual pelo shell)
      - key: TELEGRAM_BOT_TOKEN
        value: "COLOQUE_AQUI_O_TOKEN_8390..."
      - key: TELEGRAM_CHAT_IDS
        value: "842553869"

    disks:
      - name: media
        mountPath: /opt/render/project/src/media
        sizeGB: 1

  # === CRON JOB para avisos do Telegram ===
  - type: cron
    name: avisos-telegram
    env: python
    region: oregon
    plan: free
    schedule: "0 11 * * *"   # 11:00 UTC = 08:00 America/Recife
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: python manage.py avisos_telegram
    envVars:
      - key: TELEGRAM_BOT_TOKEN
        value: "COLOQUE_AQUI_O_TOKEN_8390..."
      - key: TELEGRAM_CHAT_IDS
        value: "842553869"

databases:
  - name: lotesys-db
    plan: free
    region: oregon